# -*- coding: utf-8 -*-

"""
Copyright (C) 2022, Zato Source s.r.o. https://zato.io

Licensed under LGPLv3, see LICENSE.txt for terms and conditions.
"""

# stdlib
from unittest import main

# Zato
from zato.common.test import CommandLineTestCase

# ################################################################################################################################
# ################################################################################################################################

if 0:
    from zato.common.typing_ import anydict

# ################################################################################################################################
# ################################################################################################################################

class WSXOutconnConnectTestCase(CommandLineTestCase):

# ################################################################################################################################

    def get_wsx_channel_address(self) -> 'str':

        # Command to invoke ..
        cli_params = ['wsx', 'create-channel']

        # .. get its response as a dict ..
        out = self.run_zato_cli_json_command(cli_params) # type: anydict

        # .. extract an address of a newly created WSX channel ..
        address = out['address']

        # .. and return it to our caller.
        return address

# ################################################################################################################################

    def test_connect_ok(self) -> 'None':

        _ = self.get_wsx_channel_address()

# ################################################################################################################################
# ################################################################################################################################

if __name__ == '__main__':
    main()

# ################################################################################################################################
# ################################################################################################################################
