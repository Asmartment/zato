# -*- coding: utf-8 -*-

"""
Copyright (C) 2021, Zato Source s.r.o. https://zato.io

Licensed under LGPLv3, see LICENSE.txt for terms and conditions.
"""

# Zato
from zato.common.ext.dataclasses import dataclass

# ################################################################################################################################
# ################################################################################################################################

if 0:
    from typing import Union

    Union = Union

# ################################################################################################################################
# ################################################################################################################################

@dataclass
class _ChannelResponse:
    pass

# ################################################################################################################################
# ################################################################################################################################

class _ChannelImpl:
    def __init__(self, name):
        self.name = name

    def invoke(self, request=None):
        # type: (Union[str, dict]) -> _ChannelResponse
        pass

# ################################################################################################################################
# ################################################################################################################################

class Channel:

    def get(self, name):
        # type: (str) -> _ChannelImpl
        pass

    def invoke(self, name, request):
        # type: (str) -> _ChannelResponse
        pass

# ################################################################################################################################
# ################################################################################################################################

class ChannelREST(Channel):
    pass

# ################################################################################################################################
# ################################################################################################################################

class ChannelAPI:
    def __init__(self):
        self.rest = ChannelREST()

# ################################################################################################################################
# ################################################################################################################################

class PublicAPI:
    def __init__(self):
        self.channel = ChannelAPI()

# ################################################################################################################################
# ################################################################################################################################
